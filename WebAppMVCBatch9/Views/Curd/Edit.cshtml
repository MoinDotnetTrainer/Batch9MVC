@using WebAppMVCBatch9.Models
@model RegisterModel
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h3>Edit</h3>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <p class="form-horizontal">

    <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

    <p class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </p>
                </p>

    <p class="form-group">
            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.TextBoxFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
    </p>
                </p>

    <p class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.TextBoxFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </p>
                </p>

    <p class="form-group">
            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
    </p>
                    </p>

                     <p class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.TextBoxFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
    </p>
                    </p>

                     <p class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, "Male", new { id = "male-true"  })
                @Html.Label("male-true", "Male")
                @Html.RadioButtonFor(model => model.Gender, "Female", new { id = "female-true"})
                @Html.Label("female-true", "Female")
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </p>
                    </p>

                     <p class="form-group">
            @Html.LabelFor(model => model.Dept, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.DropDownListFor(model => model.Dept, new List<SelectListItem> {
    new SelectListItem { Text="--Select--",Value="0"},
    new SelectListItem { Text="HR",Value="HR"},
    new SelectListItem { Text="IT",Value="IT"},
    new SelectListItem { Text="Librarian",Value="Librarian"},
    new SelectListItem { Text="PT",Value="PT"}
    }, new { @class = "select form-control" })
                @Html.ValidationMessageFor(model => model.Dept, "", new { @class = "text-danger" })
    </p>
                    </p>

                     <p class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.TextBoxFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
    </p>
                    </p>

    <p class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new List<SelectListItem> {
    new SelectListItem { Text="--Select--",Value="0"},
    new SelectListItem { Text="Active",Value="true"},
    new SelectListItem { Text="InActive",Value="false"}
    }, new { @class = "select form-control" })
     @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
    </p>
                        </p>

    <p class="form-group">
    <p class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </p>
                </p>
            </p>
}

<p>
    @Html.ActionLink("Back to List", "DisplayData")
</p>